/**
 * Button
 *
 *
 *
 *
 */
.Button {
	$this: &;

	// @extend .d-flex, .align-items-center;
	@extend %text-transform-uppercase, %white-space-nowrap, %position-relative;
	@include padding(top 18px right 16px bottom 18px left 16px);

	border: 1px solid currentColor;
	border-radius: 28px;
	font-size: 14px;
	// line-height: (16/14);
	line-height: 1;

	&[data-scroll] {
		opacity: 0;
		transform: translate3d(0, #{$scale-factor * 2}px, 0);
		transition: opacity 0.3s map-get($easings, ease-out-expo) 1.7s,
			border-color 0.3s map-get($easings, ease-out-expo),
			transform 0.3s map-get($easings, ease-out-expo) 1.7s;

		#{ $this }__icon {
			@extend %overflow-hidden;

			svg {
				transform: translate3d(0, 100%, 0);
				transition: 0.3s transform map-get($easings, custom) 1.8s;
			}
		}
	}

	&[data-scroll].is-inview {
		opacity: 1;
		transform: translate3d(0, 0, 0);

		#{ $this }__icon {
			svg {
				transform: translate3d(0, 0, 0);
			}
		}
	}

	span {
		@extend %position-relative;
		@extend .d-flex, .align-items-center;

		z-index: 2;
	}

	@include media-breakpoint-up(md) {
		@include padding(right 52px left 52px);
	}

	svg {
		@include margin(left 14px);
		@include size(18px);

		min-width: 18px;
		fill: currentColor;
	}

	&::after {
		@include absolute(top 0 right 0 bottom 0 left 0);
		@extend .d-block;

		content: '';
		border-radius: 26px;
		transform: scale(0);
		background-color: rgba(the_color(gray, very-dark-01), 0);
		transition: transform 0.8s map-get($easings, ease-out-expo),
			background-color 0.8s map-get($easings, ease-out-expo);
		z-index: 1;
	}

	&:hover {
		border-color: the_color(gray, very-dark-01);
		&::after {
			background-color: the_color(gray, very-dark-01);
			transform: scale(1);
		}
	}
}
